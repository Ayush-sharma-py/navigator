version: "3.9"
services:
     base:
          build: images/base
          environment: 
               - USER=docker
     pillar:
          build: images/pillar
          environment: 
               - USER=docker

     # LOCALIZATION
     ndt:
          build: 
               context: packages/localization/ndt_nodes # TODO: Split map provider into separate package
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_ndt_nodes
               - map_name=borregas
               - param_name=localization/ndt_localizer.param.yaml
          volumes:
               - type: bind
                 source: ./data
                 target: /opt/data
               - ./params:/opt/params

     # MAPPING
     lanelet_provider:
          build: 
               context: packages/mapping/lanelet_provider
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_lanelet_provider
               - map_name=borregas
          volumes:
               - type: bind
                 source: ./data
                 target: /opt/data
          depends_on:
               - ndt

     # MISC
     urdf_publisher:
          # network_mode: host
          # pid: host
          build: images/frame
          environment: 
               - USER=docker
          command: ros2 run robot_state_publisher robot_state_publisher /opt/data/voltron.urdf
          volumes:
               - type: bind
                 source: ./data
                 target: /opt/data
     odom_bl_publisher:
          build: images/frame
          environment: 
               - USER=docker
          command: ros2 run tf2_ros static_transform_publisher 0 0 0 0 0 0 odom base_link
          volumes:
               - type: bind
                 source: ./data
                 target: /opt/data
     
     # PERCEPTION
     lidars:
          # network_mode: host
          # pid: host
          build: 
               context: packages/perception/velodyne_nodes
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_velodyne_nodes
               - front_param_name=perception/lidar_front.param.yaml
               - rear_param_name=perception/lidar_rear.param.yaml
          volumes:
               - type: bind
                 source: ./params
                 target: /opt/params
     lidar_filters:
          # network_mode: host
          # pid: host
          build: 
               context: packages/perception/lidar_filters
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_point_cloud_filter_transform_nodes
               - front_param_name=perception/pc_filter_transform_front_sim.param.yaml
               - rear_param_name=perception/pc_filter_transform_rear_sim.param.yaml
          volumes:
               - type: bind
                 source: ./params
                 target: /opt/params
     lidar_downsampler:
          build: 
               context: packages/perception/lidar_downsampler
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=voxel_grid_nodes
               - param_name=perception/lidar_downsampler.param.yaml
          volumes:
               - type: bind
                 source: ./params
                 target: /opt/params
     lidar_fusion:
          build: 
               context: packages/perception/lidar_fusion
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_point_cloud_fusion_nodes
               - param_name=perception/lidar_fusion.param.yaml
          volumes:
               - type: bind
                 source: ./params
                 target: /opt/params


     # PLANNING
     route_planner:
          build: 
               context: packages/planning/route_planner
               dockerfile: ../../../images/frame/Dockerfile
          environment: 
               - USER=docker
               - package_name=vt_route_planner
          # volumes:
          #      - type: bind
          #        source: ./params
          #        target: /opt/params